{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"printEx",
				"printExpr( e : haxe.macro.Expr )	String"
			],
			[
				"rever",
				"reversed()	Array<String>"
			],
			[
				"Acc",
				"AccessTest	class"
			],
			[
				"Typ",
				"TypedefWithAnnotationAnd	class"
			],
			[
				"class",
				"class	class"
			],
			[
				"Tuple",
				"TupleTest	class"
			],
			[
				"tmp_",
				"$tmp_name	var"
			],
			[
				"tmp",
				"$tmp_name	var"
			],
			[
				"Po",
				"Positions	class"
			],
			[
				"Sele",
				"Select	class"
			],
			[
				"Select",
				"SelectTest	class"
			],
			[
				"cl",
				"class	class"
			],
			[
				"E",
				"Error"
			],
			[
				"to",
				"typeToStringId"
			],
			[
				"Ob",
				"ObservableTrigger"
			],
			[
				"In",
				"Inactive"
			],
			[
				"Ser",
				"ServerState"
			],
			[
				"Node",
				"NodeServerState"
			],
			[
				"Ex",
				"ExpressServer"
			],
			[
				"Re",
				"RequestBody"
			],
			[
				"Req",
				"Request	stx.net.http.ipt"
			],
			[
				"arr",
				"Arrowlet"
			],
			[
				"TS",
				"TString"
			],
			[
				"T",
				"TString"
			],
			[
				"Se",
				"SegmentType"
			],
			[
				"seg",
				"segment	var"
			],
			[
				"STrin",
				"String"
			],
			[
				"su",
				"substring"
			],
			[
				"rel",
				"relative_part"
			],
			[
				"auth",
				"authority"
			],
			[
				"str",
				"stream"
			],
			[
				"STring",
				"StringType"
			],
			[
				"path_o",
				"path_rootless"
			],
			[
				"pat",
				"path_absolute"
			],
			[
				"path",
				"path_abempty"
			],
			[
				"fra",
				"fragment"
			],
			[
				"use",
				"userinfo"
			],
			[
				"sub",
				"sub_delims"
			],
			[
				"Route",
				"RouteArgs"
			],
			[
				"Par",
				"ParseStrings"
			],
			[
				"Strin",
				"String"
			],
			[
				"Int",
				"Integer"
			],
			[
				"re",
				"req	var"
			],
			[
				"r",
				"request"
			],
			[
				"Request",
				"RequestBuilder"
			],
			[
				"request",
				"RequestBuilder	class"
			],
			[
				"String",
				"StringMap"
			],
			[
				"typ",
				"types"
			],
			[
				"Stri",
				"String"
			],
			[
				"tin",
				"tink_core [1.0.0-rc.6]"
			],
			[
				"add",
				"addendum [dev]"
			],
			[
				"STri",
				"StringMap"
			],
			[
				"Rep",
				"ResponseType"
			],
			[
				"Middle",
				"MiddlewareBase"
			],
			[
				"bo",
				"bot.imports	bot.imports"
			],
			[
				"trig",
				"triggers"
			],
			[
				"t",
				"triggers"
			],
			[
				"mi",
				"middleware"
			],
			[
				"Bo",
				"BotObserverOverride"
			],
			[
				"Bot",
				"BotObservable"
			],
			[
				"stx_",
				"stx_addendum [0.6.3]"
			],
			[
				"Que",
				"QueueMiddleWare2"
			],
			[
				"bot",
				"bot.middleware	bot.middleware"
			],
			[
				"Wa",
				"WaitMiddleware"
			],
			[
				"Midd",
				"MiddlewareBase"
			],
			[
				"Middlewa",
				"MiddlewareBase	bot.middleware"
			],
			[
				"tr",
				"trigger"
			],
			[
				"Mid",
				"Middleware	bot.ifs"
			],
			[
				"Mi",
				"Middleware"
			],
			[
				"Middl",
				"Middleware"
			],
			[
				"D",
				"DefaultSubject"
			],
			[
				"m",
				"middleware"
			],
			[
				"ti",
				"trigger"
			],
			[
				"tag",
				"tag_behaviours"
			],
			[
				"Sub",
				"Subject"
			],
			[
				"h",
				"handle"
			],
			[
				"Co",
				"Component"
			],
			[
				"han",
				"handled"
			],
			[
				"Dat",
				"DataSetOp"
			],
			[
				"trigg",
				"triggers"
			],
			[
				"inter",
				"interpolate"
			],
			[
				"Class",
				"ClassMiddleware"
			],
			[
				"ha",
				"haxelib.json	haxelib.json"
			],
			[
				"Test",
				"TestComponent2	class"
			],
			[
				"Compo",
				"ComponentsContainer"
			],
			[
				"Compon",
				"ComponentBase	ces.component"
			],
			[
				"An",
				"AnonymousMiddleware	bot.middleware"
			],
			[
				"Anon",
				"AnonymousBehaviour"
			],
			[
				"be",
				"behaviours"
			],
			[
				"beh",
				"behaviours"
			],
			[
				"SR",
				"StringMap"
			],
			[
				"en",
				"endpoint"
			],
			[
				"crea",
				"createCollection	var"
			],
			[
				"if",
				"if_match	var"
			],
			[
				"C",
				"Callback"
			],
			[
				"creat",
				"createCollection"
			],
			[
				"P",
				"PutDocumentRequestHeader"
			],
			[
				"Cre",
				"CreateDocumentRequestHeader"
			],
			[
				"ini",
				"initialized"
			],
			[
				"check",
				"checked	var"
			],
			[
				"te",
				"test	Muster TestCase"
			],
			[
				"Pos",
				"PosInfos"
			],
			[
				"wih",
				"withInput"
			],
			[
				"test",
				"test	Muster TestCase"
			],
			[
				"doc",
				"document"
			],
			[
				"un",
				"unfragment"
			],
			[
				"sc",
				"scheme	var"
			],
			[
				"withS",
				"withScheme"
			],
			[
				"wi",
				"withPort"
			],
			[
				"s",
				"segments"
			],
			[
				"nu",
				"nuserinfo"
			],
			[
				"frag",
				"fragment	var"
			],
			[
				"co",
				"copier"
			],
			[
				"nport",
				"nhostport"
			],
			[
				"n",
				"nhostport"
			],
			[
				"err",
				"errorStack"
			],
			[
				"poli",
				"policy"
			],
			[
				"wa",
				"waitForSync"
			],
			[
				"orE",
				"orElseConst<T>	function"
			],
			[
				"orF",
				"orFirstDefined<T>	function"
			],
			[
				"me",
				"metadata"
			],
			[
				"met",
				"method	var"
			],
			[
				"U",
				"UriObjectTest"
			],
			[
				"policy",
				"Policy"
			],
			[
				"req",
				"request	var"
			],
			[
				"wit",
				"withValue"
			],
			[
				"ser",
				"service	var"
			],
			[
				"wait",
				"waitForSync	var"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ed",
				"Project: Edit"
			],
			[
				"edit",
				"Project: Edit"
			],
			[
				"edi",
				"Project: Edit"
			],
			[
				"e",
				"Project: Edit"
			],
			[
				"ED",
				"Project: Edit"
			],
			[
				"bu",
				"Build: Build"
			],
			[
				"lo",
				"Convert Case: Lower Case"
			],
			[
				"low",
				"Convert Case: Lower Case"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pro",
				"Project: Edit"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"brack",
				"BracketHighlighter: Select Bracket Content"
			],
			[
				"bra",
				"Bracketeer: Select Inside Braces"
			],
			[
				"install",
				"Haxelib: Install library"
			],
			[
				"repl",
				"SublimeREPL: Clojure"
			],
			[
				"proj",
				"Project: Edit"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"bound",
				"List bound keys"
			],
			[
				"stpr",
				"STProjectMaker: Create project"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"sm",
				"STProjectMaker: Create project"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"markdow",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"upg",
				"Package Control: Upgrade Package"
			],
			[
				"upd",
				"Package Control: Upgrade Package"
			],
			[
				"updat",
				"Haxelib: Update library"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"",
				"Bookmarks: Select All"
			],
			[
				"br",
				"Preferences: Browse Packages"
			],
			[
				"tr",
				"Traverse: Traverse from Home"
			],
			[
				"brows",
				"Preferences: Browse Packages"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"align",
				"Preferences: Alignment File Settings – Default"
			],
			[
				"ali",
				"Preferences: Alignment File Settings – User"
			],
			[
				"alig",
				"Preferences: Alignment Key Bindings – User"
			],
			[
				"alignm",
				"Preferences: Alignment File Settings – Default"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"bin",
				"Preferences: Key Bindings - Default"
			],
			[
				"mark",
				"Markdown Preview: export HTML in Sublime Text"
			],
			[
				"mar",
				"Markdown Preview: copy to clipboard"
			],
			[
				"copy",
				"File: Copy as Tag a"
			],
			[
				"pr",
				"Preferences: Settings - User"
			],
			[
				"pref",
				"Preferences: Settings - Default"
			],
			[
				"pre",
				"Preferences: Settings - User"
			],
			[
				"prefer",
				"Preferences: Settings - Default"
			],
			[
				"pac",
				"Package Control: Remove Package"
			],
			[
				"jslin",
				"JSLint: Run JSLint"
			],
			[
				"jsli",
				"JSLint: Run JSLint"
			],
			[
				"jsl",
				"JSLint: Run JSLint"
			],
			[
				"jslint",
				"JSLint: Run JSLint"
			],
			[
				"j",
				"JSLint: Run JSLint"
			],
			[
				"js",
				"JSLint: Show JSLint Result"
			],
			[
				"JSL",
				"JSLint: Run JSLint"
			],
			[
				"JSli",
				"JSLint: Run JSLint"
			],
			[
				"ja",
				"Set Syntax: Jade"
			],
			[
				"pack	",
				"Package Control: Install Package"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"x",
				"Set Syntax: XML"
			],
			[
				"xm",
				"Set Syntax: XML"
			],
			[
				"packa	",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"Pac",
				"Package Control: Discover Packages"
			],
			[
				"pack",
				"Package Control: Add Repository"
			],
			[
				"INS",
				"Package Control: Install Package"
			],
			[
				"Inst",
				"Package Control: Install Package"
			],
			[
				"ke",
				"Preferences: Key Bindings - Default"
			],
			[
				"Instal",
				"Package Control: Install Package"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 631.0,
		"history":
		[
			"sys.modules.keys()",
			"import sys",
			"sys.modules.keys()",
			"clear",
			"help",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/dayz/prj/haxe/metah",
		"/home/dayz/prj/haxe/metah/gist2ad4246f257e627a5833-cd161d71647e5fc24e8b53301ff11e43167dd2b4",
		"/home/dayz/prj/haxe/metah/src",
		"/home/dayz/prj/haxe/metah/src/main",
		"/home/dayz/prj/haxe/metah/src/main/haxe",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/macro",
		"/home/dayz/prj/haxe/metah/src/test",
		"/home/dayz/prj/haxe/metah/src/test/haxe",
		"/home/dayz/prj/haxe/metah/src/test/haxe/ah",
		"/home/dayz/prj/haxe/metah/src/test/haxe/ah/macro"
	],
	"file_history":
	[
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/macro/Types.hx",
		"/home/dayz/prj/haxe/metah/src/test/haxe/Test.hx",
		"/home/dayz/haxelib/tink_macro/0,5,0/src/tink/macro/Functions.hx",
		"/home/dayz/haxelib/tink_macro/0,5,0/src/tink/macro/Exprs.hx",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/macro/Entype.hx",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/Exprs.hx",
		"/home/dayz/prj/haxe/metah/src/test/haxe/ah/macro/AccessTest.hx",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/macro/Access.hx",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/Macro.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/MacroStringTools.hx",
		"/home/dayz/haxelib/tink_macro/0,5,0/src/tink/macro/Positions.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/Expr.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/Printer.hx",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/macro/Select.hx",
		"/home/dayz/prj/haxe/haxe/std/js/Promise.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/PropertyNodeList.hx",
		"/home/dayz/prj/haxe/haxe/std/cpp/RawPointer.hx",
		"/home/dayz/prj/haxe/haxe/std/String.hx",
		"/home/dayz/prj/haxe/haxe/std/php/Exception.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/webgl/ExtensionDebugRendererInfo.hx",
		"/home/dayz/prj/haxe/haxe/std/StringTools.hx",
		"/home/dayz/prj/haxe/addendum/src/main/haxe/stx/Arrays.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/ds/ArraySort.hx",
		"/home/dayz/prj/haxe/haxe/std/Array.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/ArrayBuffer.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/text/engine/EastAsianJustifier.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/utils/SetIntervalTimer.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/ExprTools.hx",
		"/home/dayz/haxelib/tink_macro/0,5,0/src/tink/MacroApi.hx",
		"/home/dayz/prj/haxe/metah/src/main/haxe/stx/Macro.hx",
		"/home/dayz/prj/haxe/haxe/std/Map.hx",
		"/home/dayz/prj/haxe/metah/src/test/haxe/ah/macro/EntypeTest.hx",
		"/home/dayz/prj/haxe/metah/src/test/haxe/ah/macro/SelectTest.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/errors/TypeError.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/Tools.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/events/SyncEvent.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/EnumTools.hx",
		"/home/dayz/prj/haxe/haxe/std/Enum.hx",
		"/home/dayz/haxelib/tink_macro/0,5,0/src/tink/macro/Metadatas.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/Context.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/TypeTools.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/ComplexTypeTools.hx",
		"/home/dayz/haxelib/tink_macro/0,5,0/src/tink/macro/Types.hx",
		"/home/dayz/prj/haxe/metah/src/test/haxe/ah/macro/TupleTest.hx",
		"/home/dayz/haxelib/tink_macro/0,5,0/src/tink/macro/Constructor.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/webgl/ExtensionCompressedTexturePVRTC.hx",
		"/home/dayz/prj/haxe/addendum/src/main/haxe/stx/Compare.hx",
		"/home/dayz/prj/haxe/haxe/std/sys/db/Types.hx",
		"/home/dayz/prj/haxe/addendum/src/main/haxe/stx/Types.hx",
		"/home/dayz/prj/haxe/haxe/std/Type.hx",
		"/home/dayz/prj/haxe/haxe/std/cpp/Function.hx",
		"/home/dayz/prj/haxe/metah/build.hxml",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/macro/Metadata.hx",
		"/home/dayz/prj/haxe/metah/src/test/haxe/ah/macro/DiveTest.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/text/TextSnapshot.hx",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/macro/Dive.hx",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/Tuple.hx",
		"/home/dayz/prj/haxe/metah/src/main/haxe/stx/macro/Types.hx",
		"/home/dayz/prj/haxe/metah/.gitignore",
		"/home/dayz/prj/haxe/metah/src/main/haxe/ah/macro/Tuple.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/utils/ObjectInput.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/ui/GameInputControlType.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/events/WeakFunctionClosure.hx",
		"/home/dayz/prj/haxe/haxe/std/cpp/Float32.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/Constraints.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/TypedExprTools.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/webgl/ExtensionCompressedTextureATC.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/macro/MacroType.hx",
		"/home/dayz/prj/haxe/addendum/src/main/haxe/stx/Tuples.hx",
		"/home/dayz/prj/haxe/addendum/src/main/haxe/stx/types/Tuple2.hx",
		"/home/dayz/prj/haxe/metah/src/test/haxe/stx/macro/JoinTest.hx",
		"/home/dayz/prj/haxe/addendum/src/main/haxe/stx/Strings.hx",
		"/home/dayz/prj/haxe/haxe/std/flash8/Selection.hx",
		"/home/dayz/prj/haxe/haxe/std/flash8/PrintJob.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/PaintRequest.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/text/engine/TextBlock.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/Blob.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/SourceBufferList.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/CompositionEvent.hx",
		"/home/dayz/prj/haxe/haxe/std/flash8/ContextMenu.hx",
		"/home/dayz/haxelib/tink_core/1,0,0-rc,7/src/tink/core/Outcome.hx",
		"/home/dayz/prj/haxe/metah/src/test/haxe/stx/macro/SelectTest.hx",
		"/home/dayz/prj/haxe/metah/src/main/haxe/stx/macro/Exprs.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/Position.hx",
		"/home/dayz/prj/haxe/addendum/src/main/haxe/stx/Positions.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/PosInfos.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/PopStateEvent.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/PositionOptions.hx",
		"/home/dayz/prj/haxe/haxe/std/cpp/Pointer.hx",
		"/home/dayz/prj/haxe/metah/metah.sublime-project",
		"/home/dayz/prj/haxe/haxe/std/cs/Out.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/ObjectURLOptions.hx",
		"/home/dayz/prj/haxe/haxe/std/cpp/Object.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/system/TouchscreenType.hx",
		"/home/dayz/prj/haxe/addendum/src/main/haxe/stx/Eithers.hx",
		"/home/dayz/prj/haxe/haxe/std/haxe/EitherType.hx",
		"/home/dayz/prj/haxe/haxe/std/python/internal/EnumImpl.hx",
		"/home/dayz/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/dayz/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/dayz/prj/haxe/haxe/std/flash/globalization/DateTimeNameContext.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/svg/TextContentElement.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/BeforeUnloadEvent.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/idb/IndexParameters.hx",
		"/home/dayz/prj/haxe/metah/src/test/haxe/stx/macro/TupleTest.hx",
		"/home/dayz/prj/haxe/addendum/src/main/haxe/stx/ifs/Selector.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/media/AVCaptionStyle.hx",
		"/home/dayz/prj/haxe/veins-di/src/veins/di/Context.hx",
		"/home/dayz/prj/haxe/bot/src/main/haxe/ces/ifs/Component.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/MediaRecorderOptions.hx",
		"/home/dayz/prj/haxe/haxe/std/python/NativeArrayTools.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/events/AVLoadInfoEvent.hx",
		"/home/dayz/prj/haxe/haxe/std/js/html/EventSource.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/events/Event.hx",
		"/home/dayz/prj/haxe/haxe/std/flash/errors/EvalError.hx",
		"/home/dayz/prj/haxe/haxe/std/EnumValue.hx",
		"/home/dayz/prj/haxe/bot/src/main/haxe/bot/State.hx",
		"/home/dayz/prj/haxe/hxnodejs/js/node/http/Server.hx",
		"/home/dayz/prj/haxe/hxnodejs/examples/TcpServer.hx",
		"/home/dayz/prj/haxe/server/server.sublime-project",
		"/home/dayz/prj/haxe/pipes/src/main/haxe/Pipes.hx",
		"/home/dayz/prj/haxe/server/src/main/haxe/stx/net/server/events/Control.hx",
		"/home/dayz/prj/haxe/veins-di/src/veins/di/macros/ContextMacros.hx",
		"/home/dayz/prj/haxe/veins-di/src/veins/di/macros/ContextMacrosImpl.hx",
		"/home/dayz/prj/haxe/haxe/std/js/Lib.hx",
		"/home/dayz/prj/haxe/streams/src/main/haxe/stx/Process.hx",
		"/usr/lib/haxe/std/js/_std/EReg.hx",
		"/home/dayz/prj/haxe/server/src/main/haxe/stx/net/http/Server.hx",
		"/home/dayz/prj/haxe/haxe-js-kit/js/npm/connect/support/Middleware.hx"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"/home/dayz/haxelib/tink_macro/0,5,0/src/tink/macro",
			"/home/dayz/prj/haxe/server/src/main/haxe/stx/net",
			"/home/dayz/prj/haxe/veins-di/src/veins/di",
			"C:\\world\\prj\\haxe\\bot",
			"C:\\world\\prj\\haxe\\bot\\src\\main\\haxe",
			"C:\\world\\prj\\haxe\\bot\\src\\main",
			"C:\\world\\prj\\haxe\\bot\\src\\main\\haxe\\ces",
			"C:\\world\\prj\\haxe\\quiver",
			"C:\\world\\stack\\prj\\haxe\\quiver",
			"C:\\world\\stack\\prj\\haxe\\quiver\\src",
			"C:\\world\\stack\\prj\\haxe\\quiver",
			"C:\\world\\stack\\prj\\haxe\\quiver\\src",
			"C:\\world\\stack\\prj\\haxe\\quiver",
			"C:\\world\\stack\\prj\\haxe\\quiver\\src",
			"C:\\world\\stack\\prj\\haxe\\stax\\src\\main",
			"C:\\world\\stack\\prj\\haxe\\quiver",
			"C:\\world\\stack\\prj\\quiver\\src\\main\\haxe\\kwv\\crypto",
			"C:\\world\\stack\\prj\\quiver\\src\\main\\haxe\\kwv\\net\\http",
			"C:\\world\\stack\\prj\\quiver",
			"C:\\world\\stack\\prj\\quiver\\src",
			"C:\\world\\stack\\prj\\quiver",
			"C:\\world\\stack\\prj\\parsers\\src\\main\\haxe\\stx",
			"C:\\world\\stack\\prj\\quiver\\src\\main\\haxe",
			"C:\\world\\stack\\prj\\quiver\\src",
			"C:\\world\\stack\\prj\\hx_node_api",
			"C:\\world\\stack\\prj\\quiver\\src",
			"C:\\world\\stack\\prj\\quiver",
			"C:\\world\\stack\\prj\\stax",
			"C:\\world\\stack\\prj\\quiver\\src\\main\\haxe",
			"C:\\world\\stack\\prj\\quiver\\src",
			"C:\\world\\stack\\prj\\quiver\\src\\test\\haxe\\kwv",
			"C:\\world\\stack\\prj\\quiver\\src\\main\\haxe\\kwv",
			"C:\\world\\stack\\prj\\walkabout\\src\\main\\haxe\\wlk\\db\\redis",
			"C:\\world\\stack\\prj\\walkabout\\src\\main\\haxe\\wlk\\db\\sqlite",
			"C:\\world\\stack\\prj\\walkabout\\src\\main\\haxe\\wlk\\db\\mem",
			"C:\\world\\stack\\prj\\walkabout\\src\\main\\haxe\\wlk\\db\\sqlite",
			"C:\\world\\stack\\prj\\walkabout\\src\\main\\haxe\\wlk\\db\\store",
			"C:\\world\\stack\\prj\\walkabout",
			"C:\\world\\stack\\prj\\vanilla",
			"C:\\world\\stack\\prj\\walkabout",
			"C:\\world\\stack\\prj\\walkabout\\src",
			"C:\\world\\stack\\prj\\walkabout",
			"C:\\world\\stack\\prj\\vanilla",
			"C:\\world\\stack\\prj\\walkabout\\src\\main\\haxe\\wlk\\wrp",
			"C:\\world\\stack\\prj\\walkabout\\src\\main\\haxe\\wlk\\wrp\\redis",
			"C:\\world\\stack\\prj\\walkabout,<open folders>",
			"C:\\world\\stack\\prj\\walkabout",
			"C:\\world\\stack\\prj\\walkabout\\src",
			"C:\\world\\stack\\prj\\stax",
			"C:\\world\\stack\\prj\\vanilla\\src\\main\\haxe\\vnl\\arw",
			"C:\\world\\stack\\prj\\vanilla",
			"C:\\world\\stack\\prj\\walkabout",
			"C:\\world\\stack\\prj\\stax",
			"C:\\world\\stack\\prj\\walkabout",
			"C:\\world\\stack\\prj\\walkabout\\src",
			"C:\\World\\Stack\\os\\x\\src\\hx\\hx-node-externs",
			"C:\\World\\Stack\\os\\x\\src\\hx\\hx-node",
			"C:\\World\\Stack\\os\\x\\src\\hx\\hx-node-externs\\src",
			"C:\\world\\stack\\prj\\walkabout",
			"C:\\world\\stack\\prj\\walkabout\\src",
			"C:\\world\\stack\\prj\\walkabout\\src\\main",
			"C:\\world\\stack\\prj\\walkabout\\src",
			"C:\\world\\stack\\prj\\walkabout\\src\\main\\haxe\\wlk",
			"C:\\world\\stack\\prj\\vanilla\\bin\\node_modules\\connect\\lib",
			"C:\\World\\Stack\\os\\x\\src\\hx\\scuts",
			"C:\\world\\stack\\prj\\vanilla\\bin\\node_modules",
			"C:\\world\\stack\\os\\x\\src\\hx\\hx-node",
			"C:\\world\\stack\\os\\x\\src\\hx\\hx-node-externs\\js",
			"C:\\world\\stack\\prj\\vanilla",
			"C:\\world\\stack\\os\\x\\src\\hx\\tinkerbell",
			"C:\\world\\stack\\prj\\vanilla\\src\\vanilla",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\jstm",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\jstm",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\troyworks\\unit\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\tests\\src\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\dev\\src\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\dev\\src\\com\\troyworks",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks",
			"C:\\world\\stack\\projects\\troyworks\\unit\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks\\core\\cogs",
			"import com.sf.Assert;",
			"C:\\world\\stack\\projects\\troyworks\\src\\com",
			"C:\\world\\stack\\projects\\troyworks\\unit\\com",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\tests\\src\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3",
			"C:\\world\\stack\\projects\\troyworks\\unit\\test",
			"C:\\world\\stack\\projects\\troyworks\\src",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks\\core",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Tk",
			"printEx",
			"Print",
			"EFiel",
			"ExprDef",
			"Const",
			"foldLe",
			"join",
			"Urelated",
			"Params",
			"params",
			"para",
			"to",
			"Type",
			"params",
			"asT",
			"TypePath",
			"Type",
			"ComplexType",
			"entype",
			"ComplexType",
			"Case",
			"String",
			"EField",
			"TypeP",
			"Select.apply",
			"toCom",
			"Type",
			"toComp",
			"here",
			"Posit",
			"x",
			"sanit",
			"Expr",
			"yield",
			"fields",
			"makeF",
			"make",
			"EFiel",
			"\n					",
			"sure",
			"getT",
			"fields",
			"Type",
			"Field",
			"field",
			"asType",
			"Type",
			"isU",
			"}",
			"  import",
			"Express",
			"Request",
			"Start",
			"streams",
			"process",
			"streams",
			")));",
			"next",
			"server",
			"Say",
			"fn",
			"Producer",
			"Message",
			"}",
			"ServerConfig",
			"inline",
			"inline ",
			"Function",
			"public ",
			"trace",
			"KKKKK",
			"repla",
			"extractT",
			"convertArgsToCalls",
			"typeT",
			"type",
			"fullQualified",
			"full",
			"Tools",
			"]",
			"resolveD",
			"this",
			"call",
			"_astx",
			"```",
			"astx",
			"resolveD",
			"ast.",
			"ast",
			"_ast",
			"ast",
			"var _astx",
			"port",
			"Signal",
			"BytesData",
			"Buffer",
			"public",
			"e",
			"this",
			"NodeServersState",
			"NodeServerState",
			"Dynamic",
			"state.",
			"stx",
			"context",
			":Future<Option<Error>>",
			"I",
			"Push",
			"Stop",
			"Start",
			"Send",
			"Push",
			"Fail",
			"Done",
			"Init",
			"stx.net.http.Server.",
			"RequestPayload",
			"Context",
			"Future<Null<Error>>",
			"Null<Error>",
			"key",
			";",
			"Push",
			"  \n",
			"query",
			"BaseType",
			"query"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"set_$1",
			"ces.Entity",
			"ces.DefaultEntity",
			"Context",
			"ces",
			"stx.async.Eventual",
			"stx.async.arrowlet.Crank",
			"stx.io.Log",
			"foldLeft",
			"import kwv.Error;",
			"stx.arrowlet",
			"using stx.Arrowlet;",
			"using stx.UnitTest;",
			"Prelude",
			"stx.arw.Windmill",
			"stx.arw.Crank",
			"hx.rct.Dispatcher",
			"kwv.Fail",
			"stx.Option",
			"stx.Either",
			"option($1).getOrElseC(this.$1)",
			"stx.Vouch",
			"stx.Chunk",
			"public function $1{\n  return __internal__.$1;\n}",
			"public function $1{\n    return $1;\n}",
			"public function $1{\nreturn $1;\n}",
			"tupled",
			"stx.Arrow",
			"import",
			"Contract",
			"Fail",
			"kwv.Fails",
			"Fail",
			"Failure",
			"stx.Arrows",
			"Future",
			"kwv.crypto",
			"kwv.net.http",
			"stx.Errors",
			"kwv.db.Node",
			"kwv.db.NodeType",
			"kwv.arw.Extract",
			"kwv.arw.Process",
			"kwv.arw.Windmill",
			"stx.prs",
			"kwv.cnf.Configured",
			"kwv.cnf.Configuration",
			"Errors",
			"kwv.arw.Extract",
			"kwv.arw.Crank",
			"using kwv.Chunk;",
			"kwv",
			"SQLite",
			"Memory",
			"SQlite",
			"Store",
			"Tuple2",
			"Eventual",
			"/",
			"Option",
			"import stx.Muster.Test.*;",
			"import stx.Muster;\nimport stx.Muster.*;",
			"extends TestCase",
			"UnitArrow",
			"toWindmill",
			"vouchOf",
			"Vouch",
			"vouchOf",
			"Vouch",
			"vouchOf",
			"Vouch",
			"vouchOf",
			"Vouches",
			"Vouch",
			"Dynamic",
			"ArrowDB<Unit,",
			"ArrowDB<Unit",
			"wlk.wrp.redis",
			"wlk.wrap.redis",
			"asArrowRedis",
			"ArrowRedisD\nasArrowRedis",
			"ArrowRedisDB",
			"ArrowDB",
			"Redis",
			"Arrow",
			"Unit",
			"Cn",
			"stx.err",
			"fromR()",
			"public",
			"using stx.Tuples;",
			"fst()",
			"snd()",
			":ProcessorArrow<Req,Outcome<Bool>>",
			"v",
			"RedisResourceRequest",
			"TRedisResourceRequest",
			"ProcessorArrow",
			"ExtractorArrow",
			"ProcessorArrow",
			"ArrowRedis",
			"namespace",
			"NativeRedisClient",
			"NativeRedisClien",
			"namespace",
			"Promise<Int>",
			"Promise<Bool>",
			"Maybe",
			"ParseRequest",
			"stx.Promise",
			"Future",
			"/",
			"stx.Compose;",
			"static public",
			"Receive",
			"stx.Receives",
			"Receive",
			"ReceivesE.success",
			"ReceivesE.failure",
			"Receive",
			"Future<Outcome<",
			"vals",
			"",
			"vals",
			"Indexes",
			"Error.build()",
			"/",
			"Error.build()"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 32.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CSS Extended Completions":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 220.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "metah.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ent",
				"metah/src/main/haxe/ah/macro/Entype.hx"
			],
			[
				"printer",
				"std/haxe/macro/Printer.hx"
			],
			[
				"expr",
				"std/haxe/macro/Expr.hx"
			],
			[
				"arrays",
				"addendum/stx/Arrays.hx"
			],
			[
				"exprs",
				"metah/src/main/haxe/ah/Exprs.hx"
			],
			[
				"stringt",
				"std/StringTools.hx"
			],
			[
				"string",
				"std/String.hx"
			],
			[
				"exprtoo",
				"std/haxe/macro/ExprTools.hx"
			],
			[
				"macros",
				"std/haxe/macro/MacroStringTools.hx"
			],
			[
				"entyp",
				"metah/src/main/haxe/ah/macro/Entype.hx"
			],
			[
				"test",
				"metah/src/test/haxe/Test.hx"
			],
			[
				"functions",
				"tink_macro/tink/macro/Functions.hx"
			],
			[
				"select",
				"metah/src/main/haxe/ah/macro/Select.hx"
			],
			[
				"enty",
				"metah/src/main/haxe/ah/macro/Entype.hx"
			],
			[
				"conte",
				"std/haxe/macro/Context.hx"
			],
			[
				"types",
				"tink_macro/tink/macro/Types.hx"
			],
			[
				"exprtools",
				"std/haxe/macro/ExprTools.hx"
			],
			[
				"typet",
				"std/haxe/macro/TypeTools.hx"
			],
			[
				"exprt",
				"std/haxe/macro/ExprTools.hx"
			],
			[
				"comple",
				"std/haxe/macro/ComplexTypeTools.hx"
			],
			[
				"buil",
				"metah/build.hxml"
			],
			[
				"bui",
				"metah/build.hxml"
			],
			[
				"fuctions",
				"tink_macro/tink/macro/Functions.hx"
			],
			[
				"constu",
				"tink_macro/tink/macro/Constructor.hx"
			],
			[
				"context",
				"std/haxe/macro/Context.hx"
			],
			[
				"tuple",
				"metah/src/main/haxe/ah/Tuple.hx"
			],
			[
				"macr",
				"metah/src/main/haxe/stx/Macro.hx"
			],
			[
				"tuplet",
				"metah/src/test/haxe/ah/macro/TupleTest.hx"
			],
			[
				"tupltt",
				"metah/src/test/haxe/ah/macro/TupleTest.hx"
			],
			[
				"selectt",
				"metah/src/test/haxe/ah/macro/SelectTest.hx"
			],
			[
				"strings",
				"addendum/stx/Strings.hx"
			],
			[
				"position",
				"tink_macro/tink/macro/Positions.hx"
			],
			[
				"print",
				"std/haxe/macro/Printer.hx"
			],
			[
				"array",
				"std/Array.hx"
			],
			[
				"outcom",
				"tink_core/src/tink/core/Outcome.hx"
			],
			[
				"cont",
				"std/haxe/macro/Context.hx"
			],
			[
				"tinktype",
				"tink_macro/tink/macro/Types.hx"
			],
			[
				"exp",
				"std/haxe/macro/Expr.hx"
			],
			[
				"stringto",
				"std/StringTools.hx"
			],
			[
				"exrp",
				"std/haxe/macro/Expr.hx"
			],
			[
				"sele",
				"metah/src/main/haxe/stx/macro/Select.hx"
			],
			[
				"ask",
				"server/src/main/haxe/stx/net/server/events/Ask.hx"
			],
			[
				"httpserver",
				"server/src/main/haxe/stx/net/http/Server.hx"
			],
			[
				"servert",
				"server/src/test/haxe/stx/net/http/ServerTest.hx"
			],
			[
				"libs",
				"server/hxml/libs.hxml"
			],
			[
				"express/re",
				"node-kit/js/npm/express/Request.hx"
			],
			[
				"lib.",
				"std/js/Lib.hx"
			],
			[
				"rege",
				"std/js/RegExp.hx"
			],
			[
				"regex",
				"std/js/RegExp.hx"
			],
			[
				"contr",
				"server/src/main/haxe/stx/net/types/Control.hx"
			],
			[
				"messa",
				"server/src/main/haxe/stx/net/server/events/Message.hx"
			],
			[
				"mess",
				"server/src/main/haxe/stx/net/server/events/Message.hx"
			],
			[
				"conrol",
				"server/src/main/haxe/stx/net/types/Control.hx"
			],
			[
				"control",
				"server/src/main/haxe/stx/net/types/Control.hx"
			],
			[
				"pipes",
				"pipes/Pipes.hx"
			],
			[
				"contro",
				"server/src/main/haxe/stx/net/types/Control.hx"
			],
			[
				"proxy",
				"streams/stx/types/Proxy.hx"
			],
			[
				"futures",
				"latah/stx/async/Futures.hx"
			],
			[
				"as",
				"std/flash/media/AVCaptionStyle.hx"
			],
			[
				"types/stat",
				"server/src/main/haxe/stx/net/types/Status.hx"
			],
			[
				"sign",
				"tink/src/tink/core/Signal.hx"
			],
			[
				"status",
				"http/stx/net/Status.hx"
			],
			[
				"signal",
				"tink/src/tink/core/Signal.hx"
			],
			[
				"message.",
				"server/src/main/haxe/stx/net/server/events/Message.hx"
			],
			[
				"orequ",
				"http/stx/net/http/opt/Request.hx"
			],
			[
				"req",
				"http/stx/net/http/ipt/Request.hx"
			],
			[
				"requ",
				"http/stx/net/http/ipt/Request.hx"
			],
			[
				"iserver",
				"server/src/main/haxe/stx/ifs/Server.hx"
			],
			[
				"messag",
				"server/src/main/haxe/stx/server/events/Message.hx"
			],
			[
				"node",
				"server/src/main/haxe/stx/net/http/server/Node.hx"
			],
			[
				"message.h",
				"server/src/main/haxe/stx/server/events/Message.hx"
			],
			[
				"iserv",
				"server/src/main/haxe/stx/ifs/Server.hx"
			],
			[
				"stxhttp/server",
				"server/src/main/haxe/stx/net/http/Server.hx"
			],
			[
				"http/server",
				"hxnodejs/js/node/http/Server.hx"
			],
			[
				"prod",
				"streams/stx/process/Producer.hx"
			],
			[
				"lib",
				"server/hxml/libs.hxml"
			],
			[
				"call",
				"tink/src/tink/core/Callback.hx"
			],
			[
				"stat",
				"http/stx/net/Status.hx"
			],
			[
				"ifs/ser",
				"server/src/main/haxe/stx/ifs/Server.hx"
			],
			[
				"tinkerror",
				"tink/src/tink/core/Error.hx"
			],
			[
				"iser",
				"server/src/main/haxe/stx/ifs/Server.hx"
			],
			[
				"vein/to",
				"veins-di/src/veins/di/macros/Tools.hx"
			],
			[
				"tool",
				"std/haxe/macro/Tools.hx"
			],
			[
				"nodejs",
				"server/test/nodejs_test.js"
			],
			[
				"stringtool",
				"std/StringTools.hx"
			],
			[
				"contextm",
				"veins-di/src/veins/di/macros/ContextMacros.hx"
			],
			[
				"contex",
				"veins-di/src/veins/di/Context.hx"
			],
			[
				"context.",
				"std/haxe/macro/Context.hx"
			],
			[
				"contextma",
				"veins-di/src/veins/di/macros/ContextMacros.hx"
			],
			[
				"build",
				"server/build.hxml"
			],
			[
				"bu",
				"server/build.hxml"
			],
			[
				"ifs/server",
				"server/src/main/haxe/stx/ifs/Server.hx"
			],
			[
				"veinread",
				"veins-di/README.md"
			],
			[
				"contextmac",
				"veins-di/src/veins/di/macros/ContextMacros.hx"
			],
			[
				"veicontext",
				"veins-di/src/veins/di/Context.hx"
			],
			[
				"serverte",
				"server/src/test/haxe/stx/net/http/ServerTest.hx"
			],
			[
				"proc",
				"streams/stx/types/Process.hx"
			],
			[
				"reac",
				"server/src/main/haxe/stx/server/events/Reaction.hx"
			],
			[
				"natives",
				"std/cpp/NativeString.hx"
			],
			[
				"bytesd",
				"std/haxe/io/BytesData.hx"
			],
			[
				"types/pr",
				"streams/stx/types/Process.hx"
			],
			[
				"pro",
				"streams/stx/Process.hx"
			],
			[
				"typesstate",
				"server/src/main/haxe/stx/net/types/State.hx"
			],
			[
				"ser",
				"server/src/main/haxe/stx/net/http/ifs/Server.hx"
			],
			[
				"netnode",
				"server/src/main/haxe/stx/net/http/server/Node.hx"
			],
			[
				"node.hx",
				"std/js/html/NodeIterator.hx"
			],
			[
				"net/state",
				"server/src/main/haxe/stx/net/types/State.hx"
			],
			[
				"server",
				"server/src/main/haxe/stx/net/http/ifs/Server.hx"
			],
			[
				"livel",
				"bot/bot/Liveline.hx"
			],
			[
				"stx/typestate",
				"server/src/main/haxe/stx/net/types/State.hx"
			],
			[
				"hubs",
				"bot/bot/Hubs.hx"
			],
			[
				"imidd",
				"bot/bot/ifs/Middleware.hx"
			],
			[
				"ihub",
				"bot/bot/ifs/Hub.hx"
			],
			[
				"eventsserver",
				"server/src/main/haxe/stx/server/events/Action.hx"
			],
			[
				"state",
				"bot/bot/State.hx"
			],
			[
				"default",
				"bot/bot/subject/DefaultSubject.hx"
			],
			[
				"isu",
				"bot/bot/ifs/Subject.hx"
			],
			[
				"defaults",
				"bot/bot/subject/DefaultSubject.hx"
			],
			[
				"action.",
				"server/src/main/haxe/stx/server/events/Action.hx"
			],
			[
				"middle",
				"bot/bot/middleware/MiddlewareBase.hx"
			],
			[
				"isub",
				"bot/bot/ifs/Subject.hx"
			],
			[
				"componen",
				"bot/ces/component/ComponentBase.hx"
			],
			[
				"component/",
				"bot/ces/component/ComponentBase.hx"
			],
			[
				"asyn",
				"server/src/main/haxe/stx/server/events/Async.hx"
			],
			[
				"li",
				"server/hxml/libs.hxml"
			],
			[
				"impcon",
				"bot/bot/impl/Context.hx"
			],
			[
				"typede",
				"bot/ces/component/TypedComponent.hx"
			],
			[
				"macro",
				"bot/bot/Macro.hx"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ser",
				"~/prj/haxe/server/server.sublime-project"
			],
			[
				"mod",
				"~/prj/haxe/model/model.sublime-project"
			],
			[
				"mo",
				"~/prj/haxe/model/model.sublime-project"
			],
			[
				"m",
				"~/prj/haxe/model/model.sublime-project"
			],
			[
				"add",
				"~/prj/haxe/addendum/addendum.sublime-project"
			],
			[
				"",
				"~/prj/haxe/pointwise/pointwise.sublime-project"
			],
			[
				"p",
				"~/prj/haxe/pipes/pipes.sublime-project"
			],
			[
				"stre",
				"~/prj/haxe/streams/streams.sublime-project"
			],
			[
				"mac",
				"~/prj/haxe/macro/macro.sublime-project"
			],
			[
				"as",
				"~/prj/haxe/async/async.sublime-project"
			],
			[
				"yan",
				"~/prj/haxe/yana/yana.sublime-project"
			],
			[
				"asy",
				"~/prj/haxe/async/async.sublime-project"
			],
			[
				"Asyn",
				"~/prj/haxe/async/async.sublime-project"
			],
			[
				"asys",
				"~/prj/haxe/asys/asys.sublime-project"
			],
			[
				"bot",
				"~/prj/haxe/bot/bot.sublime-project"
			],
			[
				"arro",
				"~/prj/haxe/arrowlets/arrowlets.sublime-project"
			],
			[
				"ARrow",
				"~/prj/haxe/arrowlets/arrowlets.sublime-project"
			],
			[
				"arr",
				"~/prj/haxe/arrowlets/arrowlets.sublime-project"
			],
			[
				"bo",
				"~/prj/haxe/bot/bot.sublime-project"
			],
			[
				"ar",
				"C:\\world\\prj\\haxe\\arrowlets\\arrowlets.sublime-project"
			],
			[
				"s",
				"C:\\world\\prj\\haxe\\stax\\stax.sublime-project"
			],
			[
				"ara",
				"C:\\world\\prj\\haxe\\arango\\arango.sublime-project"
			],
			[
				"htt",
				"C:\\world\\prj\\haxe\\http\\http.sublime-project"
			],
			[
				"even",
				"C:\\world\\prj\\haxe\\events\\event.sublime-project"
			],
			[
				"eve",
				"C:\\world\\prj\\haxe\\events\\event.sublime-project"
			],
			[
				"str",
				"C:\\world\\prj\\haxe\\streams\\streams.sublime-project"
			],
			[
				"bot_",
				"C:\\world\\home\\bot_server\\bot_server.sublime-workspace"
			],
			[
				"st",
				"C:\\world\\prj\\haxe\\stax\\stax.sublime-project"
			],
			[
				"strea",
				"C:\\world\\prj\\haxe\\streams\\streams.sublime-project"
			],
			[
				"ad",
				"C:\\world\\prj\\haxe\\addendum\\addendum.sublime-project"
			],
			[
				"ya",
				"C:\\world\\prj\\haxe\\yana\\yana.sublime-project"
			],
			[
				"u",
				"C:\\world\\prj\\node\\user\\user.sublime-project"
			],
			[
				"a",
				"C:\\world\\prj\\haxe\\arrowlets\\arrowlets.sublime-project"
			],
			[
				"po",
				"C:\\world\\prj\\haxe\\pointwise\\pointwise.sublime-project"
			],
			[
				"log",
				"C:\\world\\prj\\haxe\\logger\\logger.sublime-project"
			],
			[
				"e8",
				"C:\\world\\prj\\haxe\\e8\\e8.sublime-project"
			],
			[
				"bvo",
				"C:\\world\\home\\bot_server\\bot_server.sublime-workspace"
			],
			[
				"caff",
				"C:\\world\\prj\\haxe\\caffeine\\caffeine.sublime-project"
			],
			[
				"haxe",
				"C:\\world\\prj\\haxe\\haxelib\\haxelib.sublime-project"
			],
			[
				"Lo",
				"C:\\world\\prj\\haxe\\logger\\logger.sublime-project"
			],
			[
				"Log",
				"C:\\world\\prj\\haxe\\logger\\logger.sublime-project"
			],
			[
				"lo",
				"C:\\world\\prj\\haxe\\logger\\logger.sublime-project"
			],
			[
				"Logg",
				"C:\\world\\prj\\haxe\\logger\\logger.sublime-project"
			],
			[
				"hs",
				"C:\\world\\prj\\haxe\\hsm2\\hsm2.sublime-project"
			],
			[
				"hsm",
				"C:\\world\\prj\\haxe\\hsm2\\hsm2.sublime-project"
			],
			[
				"hsh",
				"C:\\world\\prj\\haxe\\hsm2\\hsm2.sublime-project"
			],
			[
				"h",
				"C:\\world\\prj\\haxe\\hsm2\\hsm2.sublime-project"
			],
			[
				"hx_l",
				"C:\\world\\prj\\haxe\\lib\\hx_lib.sublime-project"
			],
			[
				"cli",
				"C:\\world\\stack\\prj\\clinic\\clinicacentral\\clinical_central.sublime-project"
			],
			[
				"sta",
				"C:\\world\\stack\\prj\\haxe\\stax\\stax.sublime-project"
			],
			[
				"rxjs",
				"C:\\world\\stack\\prj\\js\\RxJS\\rxjs.sublime-project"
			],
			[
				"hx_li",
				"/C/world/stack/prj/haxe/lib/hx_lib.sublime-project"
			],
			[
				"qu",
				"/C/world/stack/prj/haxe/quiver/quiver.sublime-project"
			],
			[
				"parsex",
				"/C/world/stack/prj/haxe/parsex/parsex.sublime-project"
			],
			[
				"parser",
				"/C/world/stack/prj/haxe/cmd/parsers.sublime-project"
			],
			[
				"arrow",
				"/C/world/stack/prj/haxe/arrow/arrows.sublime-project"
			],
			[
				"hx-f",
				"/C/world/stack/prj/haxe/hx-ffi/hx_ffi.sublime-project"
			],
			[
				"au",
				"/C/world/stack/prj/haxe/auth/auth.sublime-project"
			],
			[
				"hx_node",
				"/C/world/stack/prj/haxe/hx_node_externs/hx_node_externs.sublime-project"
			],
			[
				"tink",
				"/C/world/stack/prj/haxe/tinkerbell/tinkerbell.sublime-project"
			],
			[
				"dr",
				"/C/world/stack/prj/haxe/draw/draw.sublime-project"
			],
			[
				"stax",
				"/C/world/stack/prj/haxe/stax/stax.sublime-project"
			],
			[
				"hatra",
				"/C/world/stack/prj/haxe/haxe-traits/haxe-traits.sublime-project"
			],
			[
				"un",
				"/C/world/stack/prj/haxe/underscore/underscore.sublime-project"
			],
			[
				"hsm2",
				"/C/world/stack/prj/haxe/hsm2/hsm2.sublime-project"
			],
			[
				"d",
				"/C/world/stack/prj/haxe/draw/draw.sublime-project"
			],
			[
				"pip",
				"/C/world/stack/prj/haskell/Haskell-Pipes-Library/Haskell-Pipes-Library.sublime-project"
			],
			[
				"b",
				"/G/home/dayz/box.sublime-project"
			],
			[
				"li",
				"/C/world/stack/prj/tools/libserv/libserv.sublime-project"
			],
			[
				"lib",
				"/C/world/stack/prj/tools/libserv/libserv.sublime-project"
			],
			[
				"ffm",
				"/C/world/stack/prj/hx_node_ffmpeg/ffmpeg.sublime-project"
			],
			[
				"hx",
				"/C/world/stack/prj/hx_aws_sdk/hx_aws_sdk.sublime-project"
			],
			[
				"queue",
				"/C/world/stack/prj/queue/queue.sublime-project"
			],
			[
				"Li",
				"/C/world/stack/prj/tools/libserv/libserv.sublime-project"
			],
			[
				"l",
				"/C/world/stack/prj/tools/libserv/libserv.sublime-project"
			],
			[
				"libse",
				"/C/world/stack/prj/tools/libserv/libserv.sublime-project"
			],
			[
				"mu",
				"/C/world/stack/prj/muster/muster.sublime-project"
			],
			[
				"S",
				"/C/world/stack/prj/stax/stax.sublime-project"
			],
			[
				"Muste",
				"/C/world/stack/prj/muster/muster.sublime-project"
			],
			[
				"que",
				"/C/world/stack/prj/queue/queue.sublime-project"
			],
			[
				"exter",
				"/C/world/stack/prj/hx_node_externs/hx_node_externs.sublime-project"
			],
			[
				"auth",
				"/C/world/stack/prj/auth_core/auth_core.sublime-project"
			],
			[
				"Mu",
				"/C/world/stack/prj/muster/muster.sublime-project"
			],
			[
				"par",
				"/C/world/stack/prj/parsers/parsers.sublime-project"
			],
			[
				"aut",
				"/C/world/stack/prj/auth_core/auth_core.sublime-project"
			],
			[
				"V",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"su",
				"/C/world/stack/prj/super/super.sublime-project"
			],
			[
				"sup",
				"/C/world/stack/prj/super/super.sublime-project"
			],
			[
				"van",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"v",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"vani",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"blo",
				"/C/world/stack/prj/blog/blog.sublime-project"
			],
			[
				"hx_",
				"/C/world/stack/prj/hx_node_externs/hx_node_externs.sublime-project"
			],
			[
				"va",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"wal",
				"/C/world/stack/prj/walkabout/walkabout.sublime-project"
			],
			[
				"super",
				"/C/world/stack/prj/super/super.sublime-project"
			],
			[
				"f",
				"/C/world/stack/prj/funk/funk.sublime-project"
			],
			[
				"fi",
				"/C/world/stack/prj/funk/funk.sublime-project"
			],
			[
				"ua",
				"/C/world/stack/prj/auth/auth.sublime-project"
			],
			[
				"vn",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"us",
				"/C/world/stack/prj/user/user.sublime-project"
			],
			[
				"User",
				"/C/world/stack/prj/user/user.sublime-project"
			],
			[
				"user",
				"/C/world/stack/prj/user/user.sublime-project"
			],
			[
				"use",
				"/C/world/stack/prj/user/user.sublime-project"
			],
			[
				"abs",
				"/C/world/stack/prj/abstracttypes/abstracttypes.sublime-project"
			],
			[
				"Redis",
				"/C/world/stack/prj/test/AlreadyDefined/AlreadyDefined.sublime-project"
			],
			[
				"ab",
				"/C/world/stack/prj/abstracttypes/abstracttypes.sublime-project"
			],
			[
				"pla",
				"/C/world/stack/prj/platform/platform.sublime-project"
			],
			[
				"usr",
				"/C/world/stack/prj/user/user.sublime-project"
			],
			[
				"vnl",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"vanl",
				"/C/world/stack/prj/vanilla/vanilla.sublime-project"
			],
			[
				"for",
				"/C/world/stack/prj/hx-node-formidable/formidable.sublime-project"
			],
			[
				"pr",
				"/C/world/stack/prj/preview/preview.sublime-project"
			],
			[
				"pop",
				"/C/world/stack/prj/popcorn/popcorn.sublime-project"
			],
			[
				"w",
				"/C/world/stack/prj/walkabout/walkabout.sublime-project"
			],
			[
				"con",
				"/C/world/stack/prj/conf/conf.sublime-project"
			],
			[
				"hxun",
				"/C/world/stack/prj/hxunit/hxunit.sublime-project"
			],
			[
				"C",
				"/C/world/stack/prj/conf/conf.sublime-project"
			],
			[
				"hxu",
				"/C/world/stack/prj/hxunit/hxunit.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 344.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
